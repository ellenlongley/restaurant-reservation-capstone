{"version":3,"sources":["layout/Menu.js","utils/date-time.js","utils/format-reservation-date.js","utils/api.js","layout/ErrorAlert.js","dashboard/Dashboard.js","reservations/ReservationForm.js","reservations/NewReservation.js","tables/NewTable.js","reservations/SeatReservation.js","layout/NotFound.js","search/SearchReservation.js","reservations/EditReservation.js","layout/Routes.js","layout/Layout.js","App.js","index.js"],"names":["Menu","className","to","id","type","dateFormat","asDateString","date","getFullYear","toString","getMonth","padStart","getDate","today","Date","formatDate","reservation","reservation_date","match","formatReservationDate","reservations","Array","isArray","map","API_BASE_URL","process","headers","Headers","fetchJson","url","options","onCancel","a","fetch","response","status","json","payload","error","Promise","reject","message","data","name","console","stack","resolve","listReservations","params","signal","URL","Object","entries","forEach","key","value","searchParams","append","then","formatReservationTime","method","body","JSON","stringify","reservationId","updateReservationStatus","newStatus","listTables","table","tableId","reservation_id","finishTable","table_id","ErrorAlert","Dashboard","useState","setReservations","tables","setTables","setError","useParams","history","useHistory","loadDashboard","abortController","AbortController","catch","abort","window","confirm","reservationDate","useEffect","reservationsTable","filter","reservation_status","scope","first_name","last_name","mobile_number","reservation_time","people","href","onClick","cancelHandler","tablesTable","table_name","capacity","finishHandler","prevDay","currentDate","split","year","month","day","setMonth","setDate","previous","push","nextDay","next","style","border","ReservationForm","editReservation","setFirstName","setLastName","setMobileNumber","setDateOfReservation","setTimeOfReservation","setNumberOfPeople","parseInt","firstName","lastName","mobileNumber","dateOfReservation","timeOfReservation","numberOfPeople","submitHandler","event","preventDefault","updateReservation","createReservation","onSubmit","for","placeholder","onChange","target","pattern","NewReservation","NewTable","tableName","setTableName","setCapacity","createTable","SeatReservation","selectedTable","setSelectedTable","loadTables","htmlFor","required","seatTable","NotFound","SearchReservation","searchValue","setSearchValue","foundReservations","setFoundReservations","searchHandler","e","length","EditReservation","setEditReservation","Routes","exact","path","Layout","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71fecce4.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\n/**\n * Defines the menu for this application.\n *\n * @returns {JSX.Element}\n */\n\nfunction Menu() {\n  return (\n    <nav className=\"navbar navbar-dark align-items-start p-0\">\n      <div className=\"container-fluid d-flex flex-column p-0\">\n        <Link\n          className=\"navbar-brand d-flex justify-content-center align-items-center sidebar-brand m-0\"\n          to=\"/\"\n        >\n          <div className=\"sidebar-brand-text mx-3\">\n            <span>Periodic Tables</span>\n          </div>\n        </Link>\n        <hr className=\"sidebar-divider my-0\" />\n        <ul className=\"nav navbar-nav text-light\" id=\"accordionSidebar\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              <span className=\"oi oi-dashboard\" />\n              &nbsp;Dashboard\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/search\">\n              <span className=\"oi oi-magnifying-glass\" />\n              &nbsp;Search\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/reservations/new\">\n              <span className=\"oi oi-plus\" />\n              &nbsp;New Reservation\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/tables/new\">\n              <span className=\"oi oi-layers\" />\n              &nbsp;New Table\n            </Link>\n          </li>\n        </ul>\n        <div className=\"text-center d-none d-md-inline\">\n          <button\n            className=\"btn rounded-circle border-0\"\n            id=\"sidebarToggle\"\n            type=\"button\"\n          />\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Menu;\n","const dateFormat = /\\d\\d\\d\\d-\\d\\d-\\d\\d/;\nconst timeFormat = /\\d\\d:\\d\\d/;\n\n/**\n * Formats a Date object as YYYY-MM-DD.\n *\n * This function is *not* exported because the UI should generally avoid working directly with Date instance.\n * You may export this function if you need it.\n *\n * @param date\n *  an instance of a date object\n * @returns {string}\n *  the specified Date formatted as YYYY-MM-DD\n */\nfunction asDateString(date) {\n  return `${date.getFullYear().toString(10)}-${(date.getMonth() + 1)\n    .toString(10)\n    .padStart(2, \"0\")}-${date.getDate().toString(10).padStart(2, \"0\")}`;\n}\n\n/**\n * Format a date string in ISO-8601 format (which is what is returned from PostgreSQL) as YYYY-MM-DD.\n * @param dateString\n *  ISO-8601 date string\n * @returns {*}\n *  the specified date string formatted as YYYY-MM-DD\n */\nexport function formatAsDate(dateString) {\n  return dateString.match(dateFormat)[0];\n}\n\n/**\n * Format a time string in HH:MM:SS format (which is what is returned from PostgreSQL) as HH:MM.\n * @param timeString\n *  HH:MM:SS time string\n * @returns {*}\n *  the specified time string formatted as YHH:MM.\n */\nexport function formatAsTime(timeString) {\n  return timeString.match(timeFormat)[0];\n}\n\n/**\n * Today's date as YYYY-MM-DD.\n * @returns {*}\n *  the today's date formatted as YYYY-MM-DD\n */\nexport function today() {\n  return asDateString(new Date());\n}\n\n/**\n * Subtracts one day to the specified date and return it in as YYYY-MM-DD.\n * @param currentDate\n *  a date string in YYYY-MM-DD format (this is also ISO-8601 format)\n * @returns {*}\n *  the date one day prior to currentDate, formatted as YYYY-MM-DD\n */\nexport function previous(currentDate) {\n  let [ year, month, day ] = currentDate.split(\"-\");\n  month -= 1;\n  const date = new Date(year, month, day);\n  date.setMonth(date.getMonth());\n  date.setDate(date.getDate() - 1);\n  return asDateString(date);\n}\n\n/**\n * Adds one day to the specified date and return it in as YYYY-MM-DD.\n * @param currentDate\n *  a date string in YYYY-MM-DD format (this is also ISO-8601 format)\n * @returns {*}\n *  the date one day after currentDate, formatted as YYYY-MM-DD\n */\nexport function next(currentDate) {\n  let [ year, month, day ] = currentDate.split(\"-\");\n  month -= 1;\n  const date = new Date(year, month, day);\n  date.setMonth(date.getMonth());\n  date.setDate(date.getDate() + 1);\n  return asDateString(date);\n}\n","import { formatAsDate } from \"./date-time\";\n\nfunction formatDate(reservation) {\n  reservation.reservation_date = formatAsDate(reservation.reservation_date);\n  return reservation;\n}\n\n/**\n * Formats the reservation_date property of a reservation.\n * @param reservations\n *  a single reservation, or an array of reservations.\n * @returns {[reservation]|reservation}\n *  the specified reservation(s) with the reservation_date property formatted as YYYY-MM-DD.\n */\nexport default function formatReservationDate(reservations) {\n  return Array.isArray(reservations)\n    ? reservations.map(formatDate)\n    : formatDate(reservations);\n}\n","/**\n * Defines the base URL for the API.\n * The default values is overridden by the `API_BASE_URL` environment variable.\n */\nimport formatReservationDate from \"./format-reservation-date\";\nimport formatReservationTime from \"./format-reservation-date\";\n\nconst API_BASE_URL =\n  process.env.REACT_APP_API_BASE_URL || \"http://localhost:5001\";\n\n/**\n * Defines the default headers for these functions to work with `json-server`\n */\nconst headers = new Headers();\nheaders.append(\"Content-Type\", \"application/json\");\n\n/**\n * Fetch `json` from the specified URL and handle error status codes and ignore `AbortError`s\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param url\n *  the url for the requst.\n * @param options\n *  any options for fetch\n * @param onCancel\n *  value to return if fetch call is aborted. Default value is undefined.\n * @returns {Promise<Error|any>}\n *  a promise that resolves to the `json` data or an error.\n *  If the response is not in the 200 - 399 range the promise is rejected.\n */\nasync function fetchJson(url, options, onCancel) {\n  try {\n    const response = await fetch(url, options);\n\n    if (response.status === 204) {\n      return null;\n    }\n    const payload = await response.json();\n\n    if (payload.error) {\n      return Promise.reject({ message: payload.error });\n    }\n    return payload.data;\n  } catch (error) {\n    if (error.name !== \"AbortError\") {\n      console.error(error.stack);\n      throw error;\n    }\n    return Promise.resolve(onCancel);\n  }\n}\n\n/**\n * Retrieves all existing reservation.\n * @returns {Promise<[reservation]>}\n *  a promise that resolves to a possibly empty array of reservation saved in the database.\n */\n\nexport async function listReservations(params, signal) {\n  const url = new URL(`${API_BASE_URL}/reservations`);\n  Object.entries(params).forEach(([key, value]) =>\n    url.searchParams.append(key, value.toString())\n  );\n  return await fetchJson(url, { headers, signal }, [])\n    .then(formatReservationDate)\n    .then(formatReservationTime);\n}\n\n// creates a new reservation\nexport async function createReservation(reservation, signal) {\n  const url = `${API_BASE_URL}/reservations`;\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify({ data: reservation }),\n    signal,\n  };\n  return await fetchJson(url, options);\n}\n\nexport async function updateReservation(reservation, reservationId, signal) {\n  const url = `${API_BASE_URL}/reservations/${reservationId}`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify({ data: reservation }),\n    signal,\n  };\n  return await fetchJson(url, options);\n}\n\nexport async function updateReservationStatus(\n  reservationId,\n  newStatus,\n  signal\n) {\n  const url = `${API_BASE_URL}/reservations/${reservationId}/status`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify({ data: { status: newStatus } }),\n    signal,\n  };\n  return await fetchJson(url, options);\n}\n\n//retrieves list of all tables\nexport async function listTables(params, signal) {\n  const url = new URL(`${API_BASE_URL}/tables`);\n  Object.entries(params).forEach(([key, value]) =>\n    url.searchParams.append(key, value.toString())\n  );\n  return await fetchJson(url, { headers, signal }, []);\n}\n\n//creates a new table\nexport async function createTable(table, signal) {\n  const url = `${API_BASE_URL}/tables`;\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify({ data: table }),\n    signal,\n  };\n  return await fetchJson(url, options);\n}\n\n//seats a table\nexport async function seatTable(tableId, reservationId, signal) {\n  const url = `${API_BASE_URL}/tables/${tableId}/seat/`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify({ data: { reservation_id: reservationId } }),\n    signal,\n  };\n  return await fetchJson(url, options);\n}\n\n//finishes a table\nexport async function finishTable(table, signal) {\n  const url = `${API_BASE_URL}/tables/${table.table_id}/seat/`;\n  const options = {\n    method: \"DELETE\",\n    body: JSON.stringify(table),\n    headers,\n    signal,\n  };\n  return await fetchJson(url, options);\n}\n","import React from \"react\";\n\n/**\n * Defines the alert message to render if the specified error is truthy.\n * @param error\n *  an instance of an object with `.message` property as a string, typically an Error instance.\n * @returns {JSX.Element}\n *  a bootstrap danger alert that contains the message string.\n */\n\nfunction ErrorAlert({ error }) {\n  return (\n    error && (\n      <div className=\"alert alert-danger m-2\">Error: {error.message}</div>\n    )\n  );\n}\n\nexport default ErrorAlert;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  finishTable,\n  listReservations,\n  updateReservationStatus,\n} from \"../utils/api\";\nimport { listTables } from \"../utils/api\";\nimport { useParams } from \"react-router-dom\";\nimport ErrorAlert from \"../layout/ErrorAlert\";\nimport { today, next, previous } from \"../utils/date-time\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Dashboard() {\n  const [reservations, setReservations] = useState([]);\n  const [tables, setTables] = useState([]);\n  const [error, setError] = useState(null);\n  const params = useParams();\n  const history = useHistory();\n\n  useEffect(() => {\n    // the today() method is what was previously being used\n    // dashboard by default lists all reservations for today\n    // if a date is passed in, lists all for that date\n    const date = params.reservationDate || today();\n    loadDashboard(date);\n  }, [params]);\n\n  function loadDashboard(date) {\n    const abortController = new AbortController();\n    setError(null);\n    listReservations({ reservation_date: date }, abortController.signal)\n      .then(setReservations)\n      .catch(setError);\n    listTables(abortController.signal).then(setTables).catch(setError);\n    return () => abortController.abort();\n  }\n\n  //handlers for next, previous, and today buttons\n\n  function nextHandler() {\n    const currentDate = params.reservationDate || today();\n    const nextDay = next(currentDate);\n    history.push(`/dashboard/${nextDay}`);\n  }\n\n  function prevHandler() {\n    const currentDate = params.reservationDate || today();\n    const prevDay = previous(currentDate);\n    history.push(`/dashboard/${prevDay}`);\n  }\n\n  function todayHandler() {\n    const currentDate = today();\n    history.push(`/dashboard/${currentDate}`);\n  }\n\n  async function finishHandler(table) {\n    // confirmation alert\n    // https://stackoverflow.com/questions/9334636/how-to-create-a-dialog-with-ok-and-cancel-options\n    if (\n      window.confirm(\n        \"Is this table ready to seat new guests? This cannot be undone.\"\n      )\n    ) {\n      const date = params.reservationDate || today();\n      finishTable(table).catch(setError);\n      updateReservationStatus(table.reservation_id, \"finished\")\n        .then(() => loadDashboard(date))\n        .catch(setError);\n    } else {\n      // do nothing with cancel, it automatically closes alert\n    }\n  }\n\n  async function cancelHandler(reservation) {\n    // confirmation alert\n    // https://stackoverflow.com/questions/9334636/how-to-create-a-dialog-with-ok-and-cancel-options\n    if (\n      window.confirm(\n        \"Do you want to cancel this reservation? This cannot be undone.\"\n      )\n    ) {\n      const date = params.reservationDate || today();\n      updateReservationStatus(reservation.reservation_id, \"cancelled\")\n        .then(() => loadDashboard(date))\n        .catch(setError);\n    } else {\n      // do nothing with cancel, it automatically closes alert\n    }\n  }\n\n  const reservationsTable = reservations\n    .filter((reservation) => {\n      return reservation.reservation_status !== \"finished\";\n    })\n    .map((reservation) => (\n      <tr key={reservation.reservation_id}>\n        <th scope=\"row\">{reservation.reservation_id}</th>\n        <td>{reservation.first_name}</td>\n        <td>{reservation.last_name}</td>\n        <td>{reservation.mobile_number}</td>\n        <td>{reservation.reservation_date}</td>\n        <td>{reservation.reservation_time}</td>\n        <td>{reservation.people}</td>\n        <td data-reservation-id-status={reservation.reservation_id}>\n          {reservation.reservation_status}\n        </td>\n        <td>\n          {reservation.reservation_status === \"booked\" && (\n            <a\n              href={`/reservations/${reservation.reservation_id}/edit`}\n              className=\"btn btn-primary mr-2\"\n            >\n              Edit\n            </a>\n          )}\n          {reservation.reservation_status !== \"cancelled\" && (\n            <button\n              type=\"button\"\n              className=\"btn btn-primary mr-2 mt-2\"\n              onClick={() => cancelHandler(reservation)}\n              data-reservation-id-cancel={reservation.reservation_id}\n            >\n              Cancel\n            </button>\n          )}\n          {reservation.reservation_status === \"booked\" && (\n            <a\n              href={`/reservations/${reservation.reservation_id}/seat`}\n              className=\"btn btn-primary mr-2 mt-2\"\n            >\n              Seat\n            </a>\n          )}\n        </td>\n      </tr>\n    ));\n\n  const tablesTable = tables.map((table) => {\n    return (\n      <tr key={table.table_id}>\n        <th scope=\"row\">{table.table_id}</th>\n        <td>{table.table_name}</td>\n        <td>{table.capacity}</td>\n        <td data-table-id-status={table.table_id}>\n          {table.reservation_id ? \"Occupied\" : \"Free\"}\n        </td>\n        {/* Only display this button on tables that have a reservation_id attached (meaning they have been seated) */}\n        <td data-table-id-finish={table.table_id}>\n          {table.reservation_id ? (\n            <button\n              type=\"button\"\n              className=\"btn btn-primary mr-2\"\n              onClick={() => finishHandler(table)}\n            >\n              Finish\n            </button>\n          ) : (\n            \"\"\n          )}\n        </td>\n      </tr>\n    );\n  });\n\n  return (\n    <main>\n      <h1>Dashboard</h1>\n      <div className=\"d-md-flex mb-3\">\n        <h4 className=\"mb-0\">{`Reservations for ${\n          params.reservationDate || today()\n        }`}</h4>\n      </div>\n      <div className=\"d-md-flex mb-3\">\n        <button\n          type=\"button\"\n          className=\"btn btn-primary mr-2\"\n          onClick={prevHandler}\n        >\n          Previous\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-primary mr-2\"\n          onClick={todayHandler}\n        >\n          Today\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-primary mr-2\"\n          onClick={nextHandler}\n        >\n          Next\n        </button>\n      </div>\n      <ErrorAlert error={error} />\n      <div className=\"row\">\n        <div className=\"col-8\">\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">First Name</th>\n                <th scope=\"col\">Last Name</th>\n                <th scope=\"col\">Mobile Number</th>\n                <th scope=\"col\">Reservation Date</th>\n                <th scope=\"col\">Reservation Time</th>\n                <th scope=\"col\">Number Of People</th>\n                <th scope=\"col\">Status</th>\n                <th scope=\"col\"></th>\n              </tr>\n            </thead>\n            <tbody>{reservationsTable}</tbody>\n          </table>\n        </div>\n        <div className=\"col-4\" style={{ border: \"1px solid grey\" }}>\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">Table Name</th>\n                <th scope=\"col\">Capacity</th>\n                <th scope=\"col\">Status</th>\n                <th scope=\"col\"></th>\n              </tr>\n            </thead>\n            <tbody>{tablesTable}</tbody>\n          </table>\n        </div>\n      </div>\n    </main>\n  );\n}\n\nexport default Dashboard;\n","import { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport ErrorAlert from \"../layout/ErrorAlert\";\nimport { createReservation, updateReservation } from \"../utils/api\";\n\nfunction ReservationForm({ editReservation }) {\n  const history = useHistory();\n\n  useEffect(() => {\n    if (editReservation) {\n      setFirstName(editReservation.first_name);\n      setLastName(editReservation.last_name);\n      setMobileNumber(editReservation.mobile_number);\n      setDateOfReservation(editReservation.reservation_date);\n      setTimeOfReservation(editReservation.reservation_time);\n      setNumberOfPeople(parseInt(editReservation.people));\n    }\n  }, [editReservation]);\n\n  const [firstName, setFirstName] = useState();\n  const [lastName, setLastName] = useState();\n  const [mobileNumber, setMobileNumber] = useState();\n  const [dateOfReservation, setDateOfReservation] = useState();\n  const [timeOfReservation, setTimeOfReservation] = useState();\n  const [numberOfPeople, setNumberOfPeople] = useState();\n  const [error, setError] = useState(null);\n\n  const handleFirstNameChange = (event) => setFirstName(event.target.value);\n  const handleLastNameChange = (event) => setLastName(event.target.value);\n  const handleMobileNumberChange = (event) =>\n    setMobileNumber(event.target.value);\n  const handleDateOfReservationChange = (event) =>\n    setDateOfReservation(event.target.value);\n  const handleTimeOfReservationChange = (event) =>\n    setTimeOfReservation(event.target.value);\n  const handleNumberOfPeopleChange = (event) =>\n    setNumberOfPeople(parseInt(event.target.value));\n\n  function cancelHandler() {\n    history.push(\"/\");\n  }\n\n  function submitHandler(event) {\n    event.preventDefault();\n    const reservation = {\n      first_name: firstName,\n      last_name: lastName,\n      mobile_number: mobileNumber,\n      reservation_date: dateOfReservation,\n      reservation_time: timeOfReservation,\n      people: numberOfPeople,\n    };\n    if (!editReservation) {\n      createReservation(reservation)\n        .then(() => {\n          history.push(`/dashboard/${reservation.reservation_date}`);\n        })\n        .catch(setError);\n    } else {\n      updateReservation(reservation, editReservation.reservation_id)\n        .then(() => {\n          history.push(`/dashboard/${reservation.reservation_date}`);\n        })\n        .catch(setError);\n    }\n  }\n\n  return (\n    <>\n      <ErrorAlert error={error} />\n      <form onSubmit={submitHandler}>\n        <div className=\"mb-3\">\n          <label for=\"first_name\" className=\"form-label\">\n            First Name\n          </label>\n          <input\n            placeholder=\"First Name\"\n            type=\"text\"\n            className=\"form-control\"\n            id=\"first_name\"\n            name=\"first_name\"\n            value={firstName}\n            onChange={handleFirstNameChange}\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label for=\"last_name\" className=\"form-label\">\n            Last Name\n          </label>\n          <input\n            placeholder=\"Last Name\"\n            type=\"text\"\n            className=\"form-control\"\n            id=\"last_name\"\n            name=\"last_name\"\n            value={lastName}\n            onChange={handleLastNameChange}\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label for=\"mobile_number\" className=\"form-label\">\n            Mobile Number\n          </label>\n          <input\n            placeholder=\"Mobile Number\"\n            type=\"text\"\n            className=\"form-control\"\n            id=\"mobile_number\"\n            name=\"mobile_number\"\n            value={mobileNumber}\n            onChange={handleMobileNumberChange}\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label for=\"reservation_date\" className=\"form-label\">\n            Reservation Date\n          </label>\n          <input\n            type=\"date\"\n            className=\"form-control\"\n            id=\"reservation_date\"\n            name=\"reservation_date\"\n            placeholder=\"YYYY-MM-DD\"\n            pattern=\"\\d{4}-\\d{2}-\\d{2}\"\n            value={dateOfReservation}\n            onChange={handleDateOfReservationChange}\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label for=\"reservation_time\" className=\"form-label\">\n            Reservation Time\n          </label>\n          <input\n            type=\"time\"\n            className=\"form-control\"\n            placeholder=\"HH:MM\"\n            pattern=\"[0-9]{2}:[0-9]{2}\"\n            id=\"reservation_time\"\n            name=\"reservation_time\"\n            value={timeOfReservation}\n            onChange={handleTimeOfReservationChange}\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label for=\"people\" className=\"form-label\">\n            Number Of People\n          </label>\n          <input\n            placeholder=\"Number Of People\"\n            type=\"number\"\n            className=\"form-control\"\n            id=\"people\"\n            name=\"people\"\n            value={numberOfPeople}\n            onChange={handleNumberOfPeopleChange}\n          />\n        </div>\n        <div>\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary mr-2\"\n            onClick={cancelHandler}\n          >\n            Cancel\n          </button>\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            onClick={submitHandler}\n          >\n            Submit\n          </button>\n        </div>\n      </form>\n    </>\n  );\n}\n\nexport default ReservationForm;\n","// When user clicks New Reservation, this page is displayed.\n\nimport React from \"react\";\nimport ReservationForm from \"./ReservationForm\";\n\nfunction NewReservation() {\n  return <ReservationForm />;\n}\n\nexport default NewReservation;\n","// When user clicks New Table, this page is displayed.\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { createTable } from \"../utils/api\";\nimport ErrorAlert from \"../layout/ErrorAlert\";\n\nfunction NewTable() {\n  const history = useHistory();\n\n  const [tableName, setTableName] = useState();\n  const [capacity, setCapacity] = useState();\n  const [error, setError] = useState(null);\n\n  const handleTableNameChange = (event) => setTableName(event.target.value);\n  const handleCapacityChange = (event) =>\n    setCapacity(parseInt(event.target.value));\n\n  function cancelHandler() {\n    history.push(\"/\");\n  }\n\n  function submitHandler(event) {\n    event.preventDefault();\n    const table = {\n      table_name: tableName,\n      capacity: capacity,\n    };\n    createTable(table)\n      .then(() => {\n        history.push(\"/\");\n      })\n      .catch(setError);\n  }\n\n  //This is the form for creating a new table.\n  return (\n    <>\n      <h1>New Table</h1>\n      <ErrorAlert error={error} />\n      <form onSubmit={submitHandler}>\n        <div className=\"mb-3\">\n          <label for=\"table_name\" className=\"form-label\">\n            Table Name\n          </label>\n          <input\n            placeholder=\"Table Name\"\n            type=\"text\"\n            className=\"form-control\"\n            id=\"table_name\"\n            name=\"table_name\"\n            value={tableName}\n            onChange={handleTableNameChange}\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label for=\"capacity\" className=\"form-label\">\n            Capacity\n          </label>\n          <input\n            placeholder=\"Capacity\"\n            type=\"number\"\n            className=\"form-control\"\n            id=\"capacity\"\n            name=\"capacity\"\n            value={capacity}\n            onChange={handleCapacityChange}\n          />\n        </div>\n        <div>\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary mr-2\"\n            onClick={cancelHandler}\n          >\n            Cancel\n          </button>\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            onClick={submitHandler}\n          >\n            Submit\n          </button>\n        </div>\n      </form>\n    </>\n  );\n}\n\nexport default NewTable;\n","//When user clicks \"seat\" on reservation, this page is displayed\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { listTables, seatTable, updateReservationStatus } from \"../utils/api\";\n\nfunction SeatReservation() {\n  const [tables, setTables] = useState([]);\n  const [selectedTable, setSelectedTable] = useState();\n  const params = useParams();\n  const history = useHistory();\n\n  useEffect(() => {\n    loadTables();\n  }, []);\n\n  function loadTables() {\n    const abortController = new AbortController();\n    listTables(abortController.signal).then(setTables);\n    return () => abortController.abort();\n  }\n\n  function changeHandler({ target: { name, value } }) {\n    setSelectedTable(value);\n  }\n\n  function submitHandler() {\n    seatTable(selectedTable, params.reservation_id);\n    updateReservationStatus(params.reservation_id, \"seated\").then(() => {\n      history.push(`/dashboard`);\n    });\n  }\n\n  function cancelHandler() {\n    history.push(\"/\");\n  }\n\n  return (\n    <div className=\"mb-3\">\n      <label className=\"form-label\" htmlFor=\"tables\">\n        Tables\n      </label>\n      <select\n        className=\"form-control\"\n        id=\"tables\"\n        name=\"tables\"\n        value={selectedTable}\n        onChange={changeHandler}\n        required={true}\n      >\n        <option value=\"\">Select a table</option>\n        {tables.map((table) => {\n          return (\n            <option\n              value={table.table_id}\n            >{`${table.table_name} - ${table.capacity} people`}</option>\n          );\n        })}\n      </select>\n      <button\n        type=\"button\"\n        className=\"btn btn-secondary mr-2\"\n        onClick={cancelHandler}\n      >\n        Cancel\n      </button>\n      <button className=\"btn btn-primary\" onClick={submitHandler}>\n        Submit\n      </button>\n    </div>\n  );\n}\n\nexport default SeatReservation;\n","import React from \"react\";\n\n/**\n * Defines the \"Not Found\" page that is displayed for any unmatched route.\n *\n * You will not need to make changes to this file.\n *\n * @returns {JSX.Element}\n */\nfunction NotFound() {\n  return (\n    <div className=\"NotFound\">\n      <h1>Not Found</h1>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import { useState } from \"react\";\nimport { listReservations, updateReservationStatus } from \"../utils/api\";\n\nfunction SearchReservation() {\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [foundReservations, setFoundReservations] = useState([]);\n\n  function searchHandler() {\n    listReservations({ mobile_number: searchValue }).then(setFoundReservations);\n  }\n\n  async function cancelHandler(reservation) {\n    // confirmation alert\n    // https://stackoverflow.com/questions/9334636/how-to-create-a-dialog-with-ok-and-cancel-options\n    if (\n      window.confirm(\n        \"Do you want to cancel this reservation? This cannot be undone.\"\n      )\n    ) {\n      updateReservationStatus(reservation.reservation_id, \"cancelled\").then(\n        searchHandler\n      );\n    } else {\n      // do nothing with cancel, it automatically closes alert\n    }\n  }\n\n  const reservationsTable = foundReservations.map((reservation) => (\n    <tr key={reservation.reservation_id}>\n      <th scope=\"row\">{reservation.reservation_id}</th>\n      <td>{reservation.first_name}</td>\n      <td>{reservation.last_name}</td>\n      <td>{reservation.mobile_number}</td>\n      <td>{reservation.reservation_date}</td>\n      <td>{reservation.reservation_time}</td>\n      <td>{reservation.people}</td>\n      <td data-reservation-id-status={reservation.reservation_id}>\n        {reservation.reservation_status}\n      </td>\n      <td>\n        {reservation.reservation_status === \"booked\" && (\n          <a\n            href={`/reservations/${reservation.reservation_id}/edit`}\n            className=\"btn btn-primary mr-2\"\n          >\n            Edit\n          </a>\n        )}\n        {reservation.reservation_status !== \"cancelled\" && (\n          <button\n            type=\"button\"\n            className=\"btn btn-primary mr-2 mt-2\"\n            onClick={() => cancelHandler(reservation)}\n            data-reservation-id-cancel={reservation.reservation_id}\n          >\n            Cancel\n          </button>\n        )}\n      </td>\n    </tr>\n  ));\n\n  return (\n    <div className=\"p-3\">\n      <div className=\"d-md-flex mb-3\">\n        <input\n          name=\"mobile_number\"\n          placeholder=\"Enter a customer's phone number\"\n          value={searchValue}\n          onChange={(e) => setSearchValue(e.target.value)}\n        />\n        <div className=\"d-md-flex pl-3\">\n          <button className=\"btn btn-primary\" onClick={searchHandler}>\n            Find\n          </button>\n        </div>\n      </div>\n\n      <div className=\"d-md-flex mb-3\">\n        {foundReservations.length ? (\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">First Name</th>\n                <th scope=\"col\">Last Name</th>\n                <th scope=\"col\">Mobile Number</th>\n                <th scope=\"col\">Reservation Date</th>\n                <th scope=\"col\">Reservation Time</th>\n                <th scope=\"col\">Number Of People</th>\n                <th scope=\"col\">Status</th>\n                <th scope=\"col\"></th>\n              </tr>\n            </thead>\n            <tbody>{reservationsTable}</tbody>\n          </table>\n        ) : (\n          \"No reservations found\"\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default SearchReservation;\n","// When user clicks New Reservation, this page is displayed.\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport ReservationForm from \"./ReservationForm\";\nimport { listReservations } from \"../utils/api\";\n\nfunction EditReservation() {\n  const params = useParams();\n  const [editReservation, setEditReservation] = useState(null);\n\n  useEffect(() => {\n    if (params.reservation_id) {\n      listReservations({ reservation_id: params.reservation_id }).then(\n        (reservations) => setEditReservation(reservations[0])\n      );\n    }\n  }, [params.reservation_id]);\n\n  return <ReservationForm editReservation={editReservation} />;\n}\n\nexport default EditReservation;\n","import React from \"react\";\n\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport Dashboard from \"../dashboard/Dashboard\";\nimport NewReservation from \"../reservations/NewReservation\";\nimport NewTable from \"../tables/NewTable\";\nimport SeatReservation from \"../reservations/SeatReservation\";\nimport NotFound from \"./NotFound\";\nimport SearchReservation from \"../search/SearchReservation\";\nimport EditReservation from \"../reservations/EditReservation\";\n\n/**\n * Defines all the routes for the application.\n *\n * You will need to make changes to this file.\n *\n * @returns {JSX.Element}\n */\nfunction Routes() {\n  return (\n    <Switch>\n      <Route exact={true} path=\"/\">\n        <Redirect to={\"/dashboard\"} />\n      </Route>\n      <Route exact={true} path=\"/reservations\">\n        <Redirect to={\"/dashboard\"} />\n      </Route>\n      <Route exact={true} path=\"/reservations/new\">\n        <NewReservation />\n      </Route>\n      <Route exact={true} path=\"/tables/new\">\n        <NewTable />\n      </Route>\n      <Route path=\"/dashboard/:reservationDate\">\n        <Dashboard />\n      </Route>\n      <Route path=\"/dashboard\">\n        <Dashboard />\n      </Route>\n      <Route exact={true} path=\"/reservations/:reservation_id/seat\">\n        <SeatReservation />\n      </Route>\n      <Route exact={true} path=\"/reservations/:reservation_id/edit\">\n        <EditReservation />\n      </Route>\n      <Route exact={true} path=\"/search\">\n        <SearchReservation />\n      </Route>\n      <Route>\n        <NotFound />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport Menu from \"./Menu\";\nimport Routes from \"./Routes\";\n\nimport \"./Layout.css\";\n\n/**\n * Defines the main layout of the application.\n *\n * You will not need to make changes to this file.\n *\n * @returns {JSX.Element}\n */\nfunction Layout() {\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row h-100\">\n        <div className=\"col-md-2 side-bar\">\n          <Menu />\n        </div>\n        <div className=\"col\">\n          <Routes />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Layout;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Layout from \"./layout/Layout\";\n\n/**\n * Defines the root application component.\n * @returns {JSX.Element}\n */\nfunction App() {\n  return (\n    <Switch>\n      <Route path=\"/\">\n        <Layout />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}